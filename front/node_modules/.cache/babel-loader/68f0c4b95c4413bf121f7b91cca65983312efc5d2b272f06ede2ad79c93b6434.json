{"ast":null,"code":"var _jsxFileName = \"D:\\\\Site perso\\\\Skins-commu\\\\front\\\\src\\\\components\\\\skin-card\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./style.css\";\nimport Cookies from \"js-cookie\";\nimport userUpdateFav from \"../../api-request/user/update-fav\";\nimport skinUpdate from \"../../api-request/skin/update\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SkinCard = _ref => {\n  _s();\n  let {\n    skin,\n    CurrentUser,\n    clickcard,\n    clickfav\n  } = _ref;\n  var [countfav, setCountfav] = useState(skin.favorite);\n  var [user, setUser] = useState(CurrentUser);\n  const toogleFavorite = skin => {\n    var new_fav = countfav;\n    const token = Cookies.get('token');\n    const new_array_fav = user.skinFavorite;\n    if (!user.skinFavorite.includes(skin._id)) {\n      new_fav += 1;\n      new_array_fav.push(skin._id);\n    } else {\n      new_fav -= 1;\n      const pos_id = new_array_fav.indexOf(skin._id);\n      new_array_fav.splice(pos_id, 1);\n    }\n    userUpdateFav(new_array_fav, token).then(() => {\n      skinUpdate(skin._id, skin.classe, skin.picture, skin.color, skin.object, new_fav, skin.creator, token).then(() => {\n        setCountfav(new_fav);\n        clickfav(skin._id, user._id, new_fav, new_array_fav);\n        setUser({\n          ...user,\n          'skinFavorite': new_array_fav\n        });\n      });\n    });\n  };\n  useEffect(() => {\n    setCountfav(skin.favorite);\n    setUser(CurrentUser);\n  }, [skin, CurrentUser]);\n  const handleSelectSkin = () => {\n    clickcard(skin);\n  };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"card-skin flex-row flex-center-y p15 relative\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      alt: \"skin\",\n      className: \"card-skin__item\",\n      src: skin.picture,\n      onClick: handleSelectSkin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), user.skinFavorite.includes(skin._id) ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-skin__favorite absolute b5 r5 flex-center user-favorite\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: countfav\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"material-icons\",\n        onClick: () => toogleFavorite(skin),\n        children: \"favorite_border\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-skin__favorite absolute b5 r5 flex-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: countfav\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"material-icons\",\n        onClick: () => toogleFavorite(skin),\n        children: \"favorite_border\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this)]\n  }, skin._id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n_s(SkinCard, \"FQCkIWc0bN6iTkJeBWwWHLgR+kA=\");\n_c = SkinCard;\nexport default SkinCard;\nvar _c;\n$RefreshReg$(_c, \"SkinCard\");","map":{"version":3,"names":["React","useEffect","useState","Cookies","userUpdateFav","skinUpdate","jsxDEV","_jsxDEV","SkinCard","_ref","_s","skin","CurrentUser","clickcard","clickfav","countfav","setCountfav","favorite","user","setUser","toogleFavorite","new_fav","token","get","new_array_fav","skinFavorite","includes","_id","push","pos_id","indexOf","splice","then","classe","picture","color","object","creator","handleSelectSkin","className","children","alt","src","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Site perso/Skins-commu/front/src/components/skin-card/index.tsx"],"sourcesContent":["import React, { FunctionComponent, useEffect, useState } from \"react\";\r\nimport Skin from \"../../models/skin\";\r\nimport \"./style.css\"\r\nimport Cookies from \"js-cookie\";\r\nimport getCurrent from \"../../api-request/user/get-current\";\r\nimport userUpdateFav from \"../../api-request/user/update-fav\";\r\nimport skinUpdate from \"../../api-request/skin/update\";\r\nimport User from \"../../models/user\";\r\n\r\ntype Props = {\r\n    skin: Skin\r\n    clickcard: Function\r\n    clickfav: Function\r\n    CurrentUser: User\r\n};\r\n\r\nconst SkinCard: FunctionComponent<Props> = ({ skin, CurrentUser, clickcard, clickfav }) => {\r\n\r\n    var [countfav, setCountfav] = useState(skin.favorite);\r\n    var [user, setUser] = useState(CurrentUser);\r\n\r\n\r\n    const toogleFavorite = (skin: Skin) => {\r\n        var new_fav: number = countfav\r\n        const token = Cookies.get('token');\r\n\r\n        const new_array_fav = user.skinFavorite\r\n        if (!user.skinFavorite.includes(skin._id)) {\r\n            new_fav += 1;\r\n            new_array_fav.push(skin._id)\r\n        } else {\r\n            new_fav -= 1;\r\n            const pos_id = new_array_fav.indexOf(skin._id)\r\n            new_array_fav.splice(pos_id, 1)\r\n        }\r\n        userUpdateFav(new_array_fav, token).then(() => {\r\n            skinUpdate(skin._id, skin.classe, skin.picture, skin.color, skin.object, new_fav, skin.creator, token).then(() => {\r\n                setCountfav(new_fav)\r\n                clickfav(skin._id, user._id, new_fav, new_array_fav)\r\n                setUser({ ...user, 'skinFavorite': new_array_fav })\r\n            })\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        setCountfav(skin.favorite)\r\n        setUser(CurrentUser)\r\n    }, [skin, CurrentUser])\r\n\r\n\r\n\r\n    const handleSelectSkin = () => {\r\n        clickcard(skin);\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <li key={skin._id} className='card-skin flex-row flex-center-y p15 relative'>\r\n            <img alt='skin' className=\"card-skin__item\" src={skin.picture} onClick={handleSelectSkin}></img>\r\n            {user.skinFavorite.includes(skin._id) ? (\r\n                <div className='card-skin__favorite absolute b5 r5 flex-center user-favorite'>\r\n                    <div>{countfav}</div>\r\n                    <i className='material-icons' onClick={() => toogleFavorite(skin)}>favorite_border</i>\r\n                </div>\r\n            ) : (\r\n\r\n                <div className='card-skin__favorite absolute b5 r5 flex-center'>\r\n                    <div>{countfav}</div>\r\n                    <i className='material-icons' onClick={() => toogleFavorite(skin)}>favorite_border</i>\r\n                </div>\r\n            )}\r\n        </li>\r\n    );\r\n\r\n}\r\n\r\nexport default SkinCard;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}