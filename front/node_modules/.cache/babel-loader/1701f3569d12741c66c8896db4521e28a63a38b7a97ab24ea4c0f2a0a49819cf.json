{"ast":null,"code":"async function register(email, pseudo, password, role) {\n  var data = '';\n  try {\n    const response = await fetch(\"http://localhost:4000/users/signup\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        email,\n        pseudo,\n        password,\n        role\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n\n      //body: JSON.stringify({ \"email\": email, \"pseudo\": pseudo, \"password\": password, \"role\": role })\n    });\n\n    data = [await response.json(), await response.status];\n  } catch {\n    return false;\n  }\n  return data;\n}\nexport default register;","map":{"version":3,"names":["register","email","pseudo","password","role","data","response","fetch","method","body","JSON","stringify","headers","json","status"],"sources":["D:/SUPINFO/4WEBD/front/src/api-request/user/register.tsx"],"sourcesContent":["async function register(email:string, pseudo:string, password:string, role:string ) {\n    var data: any = ''\n    try {\n        const response = await fetch(\"http://localhost:4000/users/signup\", {\n            method: \"POST\",\n            body: JSON.stringify({ email, pseudo, password, role }),\n            headers: { \"Content-Type\": \"application/json\"}\n\n            //body: JSON.stringify({ \"email\": email, \"pseudo\": pseudo, \"password\": password, \"role\": role })\n\n        });\n        data = [await response.json(), await response.status];\n    } catch {\n        return false\n    }\n    return data\n}\nexport default register;"],"mappings":"AAAA,eAAeA,QAAQA,CAACC,KAAY,EAAEC,MAAa,EAAEC,QAAe,EAAEC,IAAW,EAAG;EAChF,IAAIC,IAAS,GAAG,EAAE;EAClB,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;MAC/DC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEV,KAAK;QAAEC,MAAM;QAAEC,QAAQ;QAAEC;MAAK,CAAC,CAAC;MACvDQ,OAAO,EAAE;QAAE,cAAc,EAAE;MAAkB;;MAE7C;IAEJ,CAAC,CAAC;;IACFP,IAAI,GAAG,CAAC,MAAMC,QAAQ,CAACO,IAAI,EAAE,EAAE,MAAMP,QAAQ,CAACQ,MAAM,CAAC;EACzD,CAAC,CAAC,MAAM;IACJ,OAAO,KAAK;EAChB;EACA,OAAOT,IAAI;AACf;AACA,eAAeL,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}